.\" 
.\" Man page for i4b-bootparams
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 3 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" (c) 2008-2010 by flonatel (sf@flonatel.org)
.\"
.TH i4b-bootparams 5 2010-01-29 "Linux" "Linux booting"
.SH NAME
i4b-bootparams \- boot up parameter handling
.SH DESCRIPTION
Some special parameters are needed to control the behavoiur when
booting from a initramfs created by 
.B i4b-mkinitramfs.
.SH OVERVIEW
When a Linux system is booted, some command line parameters are
passed to the kernel.  Typically some of them are handled in the
kernel itself, others are evaluated in the init script of the
initramfs. 
.P
The parameters the kernel handles are descibed in the kernel
documentation: Documentation/kernel-parameters.txt in the Linux source
tree. 
.P
The paramteres that are evaluated by the init of the initramfs which
is created by the 
.B init4boot
scrips, are explained in this document.
.P
The parameters for the kernel and init script are typically passed by
the boot loader (like grub or lilo), but also it's possible to
configure them in a Xen configuration file when used to boot up a Xen
Guest System.
.SH "BOOT TYPES"
There are some ways of booting a system, these are called
.B boot types.
A boot type is a mandatory parameter and one boot type must be
specified. Supported boot types are:
.P
.B local
- for local disks. This is mostly true for all (S)ATA, SCSI,
USB, ... disks connected locally to the computer. 
.P
.B iscsi
- for booting the computer via a network device from a remote iSCSI
target.
.P
.B nfs
- for booting from NFS root disks.
.SH "BOOT VARIANTS"
A
.B boot variant
is a minor way of booting.  
.P 
Example 1: 
.B local
boot type can be handled with or without LVM
.P
Example 2:
.B iscsi
boot type can be booting with or without multipath (but in any case
with network enabled)
.P
Existing boot variants are:
.P
.B multipath
- When using this boot variant, the tools for handling multipath disk
access are used to access the root device.  This is typically needed
in a data center environment with iscsi or fiber channel disks.
.P
.B network
- in some cases, there is the need to start up the network during boot
time.  This can be switched on specifying the network boot variant.
.P
.B tftp
- In some cases, the length and possibilities of command line
parameter handling are not sufficient and flexible enough.  The tftp
boot variant supports the configuration of the boot process by a
configuration that is hosted on a (central) tftp server.  Especially
for multipath or iscsi booting, in most cases the default values do
not fit or username(s) and password(s) must be adapted.
.P
.B udev
- when the boot variant udev is specified, the udev system is started
up during boot time.
.SH OVERALL PARAMETERS
This section descibes the parameters to specify the boot type and the
boot variant.  Some of these need additional paramters, that are
described in the apropriate section.
.SS BOOT TYPE
There is one paramter, that specifies the boot type:
.P
.B rfs=
.I <boot type>:<additional params>
.P
The
.I <additional params>
have the form 
.P
.B variable=value;[variable=value;]...
.SS BOOT VARIANT
The boot variants are specified with the help of a comma separated
list of boot variants after the paramter
.B bv=
.P
Example: bv=multipath,tftp
.SS HOSTID
For different boot variants or types, it is helpfull, to have a unique
identifier for a special host.  The 
.B hostid=
parameter should hold these unique id.  The use of this value is
described in the boot type of variante where it's used.
.P
Example: hostid=iboot
.SS MODULE LOADING
In some rare cases it can be, that additional modules are not
automatically loaded and must be explicitly loaded.  All modules given
with the parameter
.B loadmods=
will be explicitly loaded mostly initally during the boot process.
.P
Example: loadmods=virtio_pci,virtio_net
.P
.SH BOOT TYPE 'local'
The local boot type only handles one additional parameter:
.P
.B path
- The path to the root device.
.P
Example:
rfs=local:path=/dev/hda1
.SH BOOT TYPE 'iscsi'
The following additional parameters are supported by the iscsi boot
type:
.P
.B localiqn
- The IQN of the system to start up.
.P
.B portals
- A comma separated list of iSCSI target portals. If not specified,
all automatically tagged available iSCSI targets are used.
.P
.B path
- The path to the root device.
.P
.B usechap
- Can be 'true' or 'false'.  If set to 'true' CHAP is used for disk
access.  (Note that this has no influence to used the discovery
protocol - the discovery can is separatly handled.)
.P
.B un_out 
and
.B pw_out
- Specifies the outgoing username and password (client i.e. initiator
perspective). Note that username and password must either both or
none be specified.
.P
.B un_in
and
.B pw_in
- Specifies the incoming username and password (client i.e. initiator
perspective). Note that username and password must either both or
none be specified.
.P
.B disc_un_out 
and
.B disc_pw_out
- Specifies the outgoing username and password for discovering disks
(client i.e. initiator perspective). Note that username and password
must either both or none be specified.  
.P
Note about usernames and passwords:
.br
Note that because of a current limitation of the open-iscsi
implementation that the given usernames and passwords are used for all
targets. Also it is currently not possible to specify discovery in
passwords, because the open-iscsi has some problems with this.
.P
Examples:
.P
rfs=iscsi:localiqn=iqn.2008-02.org.flonatel:00031;\\
.br
portals=192.168.228.20,192.168.228.21;path=/dev/mapper/iboot-root1
.P
rfs=iscsi:localiqn=iqn.2008-02.org.flonatel:00031;\\
.br
portals=192.168.228.20,192.168.228.21;path=/dev/mapper/iboot-root1;\\
.br
usechap=true;un_out=uout;pw_out=secretout;un_in=uin;pw_in=secretin;\\
.br
disc_un_out=disc_user;disc_pw_out=discpassword
.P
.SH BOOT TYPE 'nfs'
The nfs handles only the following additional parameters:
.P
.B path
- The path to the NFS root.  This typically has the form
ip-address:path - where ip-address is the IP address of the
NFS host and path is the path to the NFS exported root file system.
.P
.B readonly
- Possible values: true, false.
Whether the NFS root should be mounted read only or not. By default
if this is not specified - false is assumed.
.SH BOOT VARIANT 'network'
Currently only dhcp configuration of network devices is possible.  The
network devices are specified with 
.B nw=
and can be a comma separated list.
.P
Example:
 nw=eth3:dhcp,eth5:dhcp
.SH BOOT VARIANT 'tftp'
The tftp boot variant uses tftp to get some more (configuration)
information during boot.  The parameter 
.B tftp=
must contain a comma separated list of IP addresses where to get the
information from.
.P
The list of serves is tried, when the first can serve the file
<hostid>.tar, this file is taken.
.P
The file itself must be a tar file, which is extraced in the initramfs
root dir.  If after the extraction there is a file name ./tftp.sh this
file will be sourced by the init script.
.P
The typicall use for this is, that configuration files that are needed
for the boot process (e. g. /etc/multipath.conf) can be placed on a
dedicated server.  In the ./tftp.sh script, it is possible to set
environment variables.
.P
Example:
 tftp=192.168.228.24,192.168.228.25
.P
.B Note:
The current realization has a major security issue: there is no access
control with tftp and the file is stored and transferred unencrypted.
Be sure not to store usernames or passwords in the file transferred -
until you are realy sure what you are doing.
.SH BOOT VARIANT 'udev'
Nowadays there seems no reason why 'udev' should not be used, and for
the multipath boot variant, udev is mandatory.  You should think twice
before not using this.
.SH BOOT VARIANT 'lvm2'
When using lvm2 volumes, this boot variant must be added.
.SH BOOT VARIANT 'md'
When using (software) RAID with Linux md, this boot variant must be
added.
.SH BOOT VARIANT 'aufs'
It is possible to run aufs (a la union file system) atop the specified
root file system. The original root file system is not
changed.  E. g. it is possible to use read-only nfs disks.
.SH "PARAMETER SPECIFICATION"
Some variables expect a boolean parameter. The following strings are
evaluated to true: 'y' 'yes' 'true' 'on' '1'.  All other values are
evaluated to false.
.SH "Examples"
.P Installation with FAI
The following command starts up a KVM virtual machine and installs the
system using FAI. Of course some parmaters must be adapted to reflect
local environment.
 kvm -enable-kvm -cpu qemu64 -smp 2 -m 1024 -k de \\
.br
 -name iscsiboot -vnc ":59" \\
.br
 -net nic,model=virtio,vlan=1,macaddr=00:11:32:13:01:ab \\
.br
 -net tap,vlan=1,ifname=tap0,script=no \\
.br
 -kernel /boot/vmlinuz-2.6.31-17-server \\
.br
 -initrd i4b-initrd.img-2.6.31-17-server \\
.br
 -append "bv=udev,lvm2,md,aufs loadmods=virtio_pci,virtio_net \\
.br
   nw=eth0:dhcp \\
.br
   rfs=nfs:path=192.168.77.35:/srv/fai/nfsroot/live/filesystem.dir \\
.br
   FAI_FLAGS=verbose,sshd,createvt FAI_ACTION=install \\
.br
   FAI_PORTALS=192.168.77.42,192.168.77.43"
.P
The following command then starts up the virtual machine, which was
installed using FAI:
 kvm -enable-kvm -cpu qemu64 -smp 2 -m 1024 -k de -vnc ":59" \\
.br
 -name iscsiboot\\
.br
 -net nic,model=virtio,vlan=1,macaddr=00:11:32:13:01:ab \\
.br
 -net tap,vlan=1,ifname=tap0,script=no \\
.br
 -kernel /boot/vmlinuz-2.6.31-17-server \\
.br
 -initrd i4b-initrd.img-2.6.31-17-server \\
.br
 -append "bv=udev,lvm2,md loadmods=virtio_pci,virtio_net nw=eth0:dhcp \\
.br
   rfs=iscsi:localiqn=iqn.2008-02.org.flonatel:00031;\\
.br
   portals=192.168.77.42,192.168.77.43;\\
.br
   path=/dev/iscsiboot/root;\\
.br
   usechap=true;un_out=c_u_i;pw_out=c_p_i;un_in=c_u_o;pw_in=c_p_o;\\
.br
   disc_un_out=user;disc_pw_out=password"
.P
.SH "SEE ALSO"
.B init4boot(7)
- Overview over the different aspects of the init4boot package.
.P
.B i4b-mkinitramfs(1)
- tool for creating an initramfs
.SH AUTHOR
Written by Andreas Florath (andreas@đlorath.net)
.SH COPYRIGHT
Copyright \(co 2008-2015 by Andreas Florath (andreas@florath.net)
License GPLv2+: GNU GPL version 2 or later

